import React from 'react';
export declare const PoweredByClerkText: React.MemoExoticComponent<() => import("@emotion/react/jsx-runtime").JSX.Element>;
export declare const PoweredByClerkTag: React.MemoExoticComponent<React.ForwardRefExoticComponent<Pick<Pick<Partial<Record<"isDisabled" | "hasError" | "isLoading" | "isOpen" | "isActive", any>> & React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
    css?: import("../styledSystem/types").ThemableCssProp;
} & import("../styledSystem").AsProp & {} & {
    direction?: "col" | "row" | "rowReverse" | "columnReverse" | undefined;
    align?: "end" | "start" | "baseline" | "center" | "stretch" | undefined;
    justify?: "end" | "start" | "center" | "between" | undefined;
    wrap?: "wrap" | "noWrap" | "wrapReverse" | undefined;
    gap?: 1 | 3 | 2 | 4 | 5 | 6 | 7 | 8 | 9 | undefined;
    center?: boolean | undefined;
}, "key" | "direction" | "gap" | "isDisabled" | "hasError" | "isLoading" | "isOpen" | "isActive" | "as" | keyof React.HTMLAttributes<HTMLDivElement> | "css" | "align" | "center" | "justify" | "wrap"> & React.RefAttributes<HTMLDivElement> & {
    elementDescriptor?: import("../customizables/elementDescriptors").ElementDescriptor<any> | (import("../customizables/elementDescriptors").ElementDescriptor<any> | undefined)[] | undefined;
    elementId?: import("../customizables/elementDescriptors").ElementId<string> | undefined;
    css?: undefined;
    sx?: import("../styledSystem/types").ThemableCssProp;
}, "key" | "direction" | "gap" | "isDisabled" | "hasError" | "isLoading" | "isOpen" | "isActive" | "as" | "sx" | keyof React.HTMLAttributes<HTMLDivElement> | "css" | "align" | "center" | "justify" | "wrap" | "elementDescriptor" | "elementId"> & React.RefAttributes<HTMLDivElement>>>;
